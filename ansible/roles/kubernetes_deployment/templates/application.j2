---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ item.1.name }}-deployment
  namespace: {{ item.0.namespace }}
spec:
  replicas: {{ item.1.replicas | default('1') }}
  selector:
    matchLabels:
      app: {{ item.1.name }}
      role: pods
  template:
    metadata:
      labels:
        app: {{ item.1.name }}
        role: pods
    spec:
      containers:
{% for container in item.1.containers %}
      - name: {{ container.name | default(item.1.name) }}
        image: {{ container.image }}
        ports:
{% for port in container.ports %}
        - containerPort: {{ port.containerPort }}
          protocol: {{ port.protocol | default('tcp') | upper }}
{% endfor %}
{% if container.envVars is defined %}
        env:
{% for env in container.envVars %}
        - name: {{ env.name }}
          value: {{ env.value }}
{% endfor %}
{% endif %}
{% if container.volumes is defined %}
        volumeMounts:
{% for volume in container.volumes %}
        - mountPath: {{ volume.path }}
          name: {{ volume.name | default(volume.path | replace("/", "")) | lower }}
{% endfor %}
      volumes:
{% for volume in container.volumes %}
      - name: {{ volume.name | default(volume.path | replace("/", "")) | lower }}
        nfs:
          server: {{ ansible_host }}
          path: /data/{{ item.0.namespace }}-{{ item.1.name }}/{{ volume.name | default(volume.path | replace("/", "")) | lower }}/
{% endfor %} 
{% endif %}
{% endfor %}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ item.1.name }}-service
  namespace: {{ item.0.namespace }}
  labels:
    app: {{ item.1.name }}
    role: service
spec:
{% if item.1.exposed is defined and item.1.exposed %}
  type: NodePort
{% endif %}
  selector:
    app: {{ item.1.name }}
  ports:
{% for container in item.1.containers %}
{% for port in container.ports %}
    - name: port-{{ port.clusterPort | default(port.containerPort) }}-{{ port.protocol | default('tcp') | lower }}
      protocol: {{ port.protocol | default('tcp') | upper }}
      port: {{ port.clusterPort | default(port.containerPort) }}
      targetPort: {{ port.containerPort }}
{% if item.1.exposed is defined and item.1.exposed %}
      nodePort: {{ port.nodePort }}
{% endif %}
{% endfor %}
{% endfor %}