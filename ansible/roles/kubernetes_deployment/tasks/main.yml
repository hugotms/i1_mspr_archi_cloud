---

- name: copy default network policy on master
  ansible.builtin.copy:
    src: default_policy.yml
    dest: /tmp/default-network-policy.yml
  tags: deployment
  become: True

- name: apply default network policy to cluster
  ansible.builtin.command: calicoctl apply -f /tmp/default-network-policy.yml
  tags:
    - deployment
    - default-policy
    - network

- name: delete policy configuration file
  ansible.builtin.file:
    path: /tmp/default-network-policy.yml
    state: absent
  tags: deployment
  become: True

- name: create services configuration directory
  ansible.builtin.file:
    path: /tmp/k8s-configurations/app
    state: directory
    owner: svcansible
    group: ansible
  tags: deployment
  become: True

- name: create policies configuration directory
  ansible.builtin.file:
    path: /tmp/k8s-configurations/policies
    state: directory
    owner: svcansible
    group: ansible
  tags: deployment
  become: True

- name: create endpoints configuration files
  ansible.builtin.template:
    src: endpoint.j2
    dest: /tmp/endpoint.yml
  tags: deployment

- name: create endpoints on cluster
  ansible.builtin.command: calicoctl apply -f /tmp/endpoint.yml
  tags:
    - deployment
    - network

- name: delete endpoint configuration files
  ansible.builtin.file:
    path: /tmp/endpoint.yml
    state: absent
  tags: deployment

- name: create services configuration files
  ansible.builtin.template:
    src: application.j2
    dest: "/tmp/k8s-configurations/app/{{ item.name }}.yml"
  loop: "{{ apps_deploying }}"
  loop_control:
    label: "{{ item.name }}"
  tags: deployment

- name: create variable data directories
  ansible.builtin.set_fact:
    run_directories: "{{ run_directories | default([]) + [{ 'name': item.0.name, 'volumes': item.1.volumes }] }}"
  with_subelements:
    - "{{ apps_deploying }}"
    - containers
  loop_control:
    label: "{{ item.0.name }}"
  when: item.1.volumes is defined
  tags: deployment

- name: create data directory for volumes
  ansible.builtin.file:
    path: "/data/{{ item.0.name }}/{{ item.1.name | default(item.1.path | replace('/', '')) | lower }}"
    state: directory
    recurse: True
  with_subelements:
    - "{{ run_directories }}"
    - volumes
  loop_control:
    label: "{{ item.0.name }}/{{ item.1.name | default(item.1.path | replace('/', '')) | lower }}"
  tags: deployment

- name: create policies configuration files
  ansible.builtin.template:
    src: network_policy.j2
    dest: "/tmp/k8s-configurations/policies/{{ item.name }}.yml"
  loop: "{{ apps_deploying }}"
  loop_control:
    label: "{{ item.name }}"
  when: item.rules is defined or (item.exposed is defined and item.exposed)
  tags: deployment

- name: create services on cluster
  ansible.builtin.command: "kubectl apply -f /tmp/k8s-configurations/app/{{ item.name }}.yml"
  loop: "{{ apps_deploying }}"
  loop_control:
    label: "{{ item.name }}"
  tags: deployment

- name: apply services network policies
  ansible.builtin.command: calicoctl apply -f /tmp/k8s-configurations/policies/
  tags:
    - deployment
    - network

- name: delete configuration directory
  ansible.builtin.file:
    path: /tmp/k8s-configurations
    state: absent
  tags: deployment
  become: True
