---

- name: create data directory
  ansible.builtin.file:
    path: /data
    state: directory
  become: True

- name: create filesystem on selected device
  ansible.builtin.filesystem:
    fstype: ext4
    dev: "{{ data_share_dev }}"
  tags:
    - partitions
    - definitive
  become: True

- name: removing unwanted data
  ansible.builtin.command: "tune2fs -m 0 {{ data_share_dev }}"
  tags: partitions
  become: True

- name: mount partition on filesystem
  ansible.builtin.mount:
    src: "{{ data_share_dev }}"
    path: /data
    state: mounted
    fstype: ext4
  tags: partitions
  become: True

- name: set permissions on data directory
  ansible.builtin.file:
    path: /data
    state: directory
    owner: svcansible
    group: nfs-group
    mode: "2777"
  become: True

- name: install nfs packages on server
  ansible.builtin.apt:
    name: nfs-kernel-server
    state: latest
  become: True

- name: add network to exports
  ansible.builtin.lineinfile:
    line: "/data {{ ansible_host.split('.')[0:3] | join('.') }}.0/24(rw,async,no_root_squash,no_subtree_check)"
    path: /etc/exports
    create: True
  become: True

- name: start nfs server
  ansible.builtin.service:
    name: nfs-server
    enabled: True
    state: restarted
  become: True

- name: create shared nfs directories
  ansible.builtin.file:
    path: "/data/{{ item.path }}"
    state: directory
    recurse: True
    owner: svcansible
    group: nfs-group
  loop: "{{ _nfs_mount }}"
  loop_control:
    label: "{{ item.path }}"
  when: item.state is not defined or item.state != "absent"
  become: True

- name: delete shared nfs directories
  ansible.builtin.file:
    path: "/data/{{ item.path }}"
    state: absent
  loop: "{{ _nfs_mount }}"
  loop_control:
    label: "{{ item.path }}"
  when: item.state is defined and item.state == "absent"
  become: True
